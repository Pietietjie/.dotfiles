# use with the following command `sudo ./install -c apt.conf.yaml -p dotbot-aptget/aptget.py` 
# build requirements for nvim
- aptget: [ git, ninja-build, gettext, cmake, unzip, curl, build-essential ]
- shell:
    -
        command:
            "if ! command -v nvim &> /dev/null;
            then
                git clone --depth 1 --single-branch --branch v0.9.4 https://github.com/neovim/neovim.git ~/build/neovim
                && cd ~/build/neovim
                && make CMAKE_BUILD_TYPE=RelWithDebInfo
                && cd build
                && cpack -G DEB
                && sudo dpkg -i nvim-linux64.deb 
                && cd ../..
                && rm -rf neovim;
            fi"
        stdout: true
        description: "Build neovim from source if it is not allready installed."
        stderr: true
    -
        command:
            "mkdir -p ~/.local/share/nvim/databases && touch ~/.local/share/nvim/databases/telescope_history.sqlite3"
        stdout: true
        description: "Create sqlite db for nvim"
        stderr: true
    -
        command:
            'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash'
        stdout: true
        stderr: true
        description: "Install node version manager and node"

- aptget: [ tmux, fzf, grep, ripgrep, mysql-server, mysql-client, sqlite3, jq ]
# PHP first add ppa then all the different versions and plugins
- aptget: 
    php8.2: ppa:ondrej/php
- aptget: [ php8.2-zip, php8.2-curl, php8.2-gd, php8.2-xml, php8.2-sqlite3, php8.2-mysql, php8.2-mbstring, php8.2-xdebug ]
- aptget: [ php7.4, php7.4-zip, php7.4-curl, php7.4-gd, php7.4-xml, php7.4-sqlite3, php7.4-mysql, php7.4-mbstring, php7.4-xdebug ]
